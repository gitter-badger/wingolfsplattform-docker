version: '3'

volumes:
  koha_mysql_data: {}
  nginx_html: {}
  nginx_confd: {}
  nginx_vhostd: {}



networks:
  backend:
    driver: bridge

services:
  hello_world:
    build: ./services/hello_world
    ports:
      - "0.0.0.0:5001:80"

  nginx:
    image: nginx
    volumes:
      - "nginx_confd:/etc/nginx/conf.d"
      - "nginx_vhostd:/etc/nginx/vhost.d"
      - "nginx_html:/usr/share/nginx/html"
      - "./services/nginx/proxy/certs:/etc/nginx/certs:ro"
    networks:
      - backend
    ports:
      - "0.0.0.0:8080:80"
      - "0.0.0.0:8443:443"
    depends_on:
      - koha

  # This service generates nginx configurations for services
  # that use nginx as proxy. This is needed for auto-generated
  # ssl certificates using letsencrypt.
  #
  # See also: https://github.com/gilyes/docker-nginx-letsencrypt-sample
  #
  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./services/nginx/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
      - "nginx_confd:/etc/nginx/conf.d"
      - "nginx_vhostd:/etc/nginx/vhost.d"
      - "nginx_html:/usr/share/nginx/html"
      - "./services/nginx/proxy/certs:/etc/nginx/certs:ro"
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  # This service uses letsencrypt to get ssl certificates.
  #
  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./services/nginx/proxy/certs:/etc/nginx/certs:rw"
      - "nginx_confd:/etc/nginx/conf.d"
      - "nginx_vhostd:/etc/nginx/vhost.d"
      - "nginx_html:/usr/share/nginx/html"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  koha_mysql:
    container_name: koha_mysql
    image: mysql:5.6.20
    networks:
      - backend
    cap_add:
      - MKNOD
    command:
      - mysqld
      - "--datadir=/var/lib/mysql"
      - "--user=mysql"
      - "--max_allowed_packet=64M"
      - "--wait_timeout=6000"
      - "--bind-address=0.0.0.0"
    environment:
      MYSQL_DATABASE: "koha_${KOHA_INSTANCE:-name}"
      MYSQL_PASSWORD: "${KOHA_ADMINPASS:-secret}"
      MYSQL_ROOT_PASSWORD: "${KOHA_ADMINPASS:-secret}"
      MYSQL_USER: "${KOHA_ADMINUSER:-admin}"
    volumes:
      - "koha_mysql_data:/var/lib/mysql"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "2"

  koha:
    build: ./services/koha
    networks:
      - backend
    depends_on:
      - koha_mysql
    cap_add:
      - SYS_NICE
      - DAC_READ_SEARCH
      - MKNOD
    environment:
      VIRTUAL_HOST: "opac.wingolfsplattform.org"
      VIRTUAL_NETWORK: "nginx-proxy"
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: "letsencrypt.wingolfsplattform.org"
      LETSENCRYPT_EMAIL: "ak-internet@wingolf.org"
      KOHA_HOME: "${KOHA_HOME:-/usr/share/koha/}"
      KOHA_ADMINPASS: "${KOHA_ADMINPASS:-secret}"
      KOHA_ADMINUSER: "${KOHA_ADMINUSER:-admin}"
      KOHA_INSTANCE: "${KOHA_INSTANCE:-name}"
      KOHA_DBHOST: koha_mysql
      INSTALL_LANGUAGES: "${INSTALL_LANGUAGES}"
      DEFAULT_LANGUAGE: "${DEFAULT_LANGUAGE}"
      EMAIL_ENABLED: "True"
      ENABLE_MYSQL_TRIGGERS: "${ENABLE_MYSQL_TRIGGERS}"
      ENABLE_MYSQL_SCHEMA: "${ENABLE_MYSQL_SCHEMA}"
      SMTP_SERVER_HOST: mailrelay # access through network 'backend'
      SMTP_SERVER_PORT: 2525
      MESSAGE_QUEUE_FREQUENCY: 15
      SMS_DRIVER: "${SMS_DRIVER:-NO::LinkMobilityHTTP}"
      SMS_USER: "${SMS_USER:-smsuser}"
      SMS_PASS: "${SMS_PASS:-smspass}"
      API_PASSPHRASE: "${API_PASSPHRASE:-ChangeMe}"
      NLENABLE: "${NLENABLE:-0}"
      NLBASEUSER: "${NLBASEUSER:-nlbaseuser}"
      NLBASEPASS: "${NLBASEPASS:-nlbasepass}"
      NLVENDORURL: "${NLVENDORURL:-http://nlsink:9999}"
      NLVENDORUSER: "${NLVENDORUSER:-nlvendoruser}"
      NLVENDORPASS: "${NLVENDORPASS:-nlvendorpass}"
      NLVENDORKEY: "${NLVENDORKEY:-nlvendorkey}"
      PIDGEON_URL: "${PIDGEON_URL:-pidgeonurl}"
      PIDGEON_USER: "${PIDGEON_USER:-pidgeonuser}"
      PIDGEON_PASS: "${PIDGEON_PASS:-pidgeonpass}"
      SIP_AUTOPASS: "${SIP_AUTOPASS:-autopass}"
      SIP_WORKERS: "${SIP_WORKERS:-5}"
      APACHE_MINSERVERS: "${APACHE_MINSERVERS:-2}"
      APACHE_TIMEOUT: "${APACHE_TIMEOUT:-200}"
      APACHE_SERVER_STATUS_NET: "${APACHE_SERVER_STATUS_NET:-127.0.0.1/24}"
      APACHE_REMOTE_INTERNAL_PROXY: "${APACHE_REMOTE_INTERNAL_PROXY:-127.0.0.0/16}"
      PLACK_MAX_REQUESTS: "${PLACK_MAX_REQUESTS:-100}"
      PLACK_WORKERS: "${PLACK_WORKERS:-2}"
      AUTHOR_NAME: "${AUTHOR_NAME:-john_doe}"
      AUTHOR_EMAIL: "${AUTHOR_EMAIL:-john@doe.com}"
      BUGZ_USER: "${BUGZ_USER:-bugsquasher}"
      BUGZ_PASS: "${BUGZ_PASS:-bugspass}"
      ILLENABLE: "${ILLENABLE:-0}"
      ILLUSER: "${ILLUSER:-illuser}"
      ILLNAME: "${ILLNAME:-Interlibrary loan}"
    expose:
      - 6001
      - 8081
      - 8080
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
